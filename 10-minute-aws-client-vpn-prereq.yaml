---
AWSTemplateFormatVersion: "2010-09-09"

Description: |-
  CloudFormation service role to deploy

  github.com/sqlxpert/10-minute-aws-client-vpn  GPLv3  Copyright Paul Marcelin

Parameters:

  PlaceholderHelp:
    Type: String
    Default: "https://github.com/sqlxpert/10-minute-aws-client-vpn"

  PlaceholderSuggestedStackName:
    Type: String
    Default: "CVpnPrereq"

  PlaceholderAdvancedParameters:
    Type: String
    Default: ""
    AllowedValues:
      - ""

  StackNameLike:
    Type: String
    Description: >-
      When a stack is created using the deployment role, its name must match
      this StringLike/ArnLike pattern. Examples: "CVpn" only allows a stack of
      that name; "CVpn*" also allows stacks with names such as "CVpn2" and
      "CVpnTest"; and "StackSet-CVpn-*" allows a StackSet named "CVpn", whose
      StackSet instances receive names beginning "StackSet-CVpn-". See
      https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition_operators.html
    Default: "CVpn*"

  AllowVpcIds:
    Type: List<String>
    Description: >-
      Limit stack resources to these VPCs, where possible. Separate multiple
      VPC IDs with commas (no spaces). To allow use of any available VPC,
      specify *
    Default: "*"

  AllowSubnetIds:
    Type: List<String>
    Description: >-
      Limit stack resources to these subnets, where possible. Separate
      multiple Subnet IDs with commas (no spaces). To allow use of any
      available subnets, specify *
    Default: "*"

  AllowSecGrpIds:
    Type: List<String>
    Description: >-
      Limit stack resources to these security groups, where possible. This
      does not limit use of security groups created by the stack itself.
      Separate multiple Security Group IDs with commas (no spaces). To allow
      use of any available security groups, specify *
    Default: "*"

Metadata:

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: For Reference
        Parameters:
          - PlaceholderHelp
          - PlaceholderSuggestedStackName
      - Label:
          default: Advanced Options
        Parameters:
          - PlaceholderAdvancedParameters
      - Label:
          default: For stacks created with the deployment role...
        Parameters:
          - StackNameLike
          - AllowVpcIds
          - AllowSubnetIds
    ParameterLabels:
      PlaceholderHelp:
        default: For help with this stack, see
      PlaceholderSuggestedStackName:
        default: Suggested stack name
      PlaceholderAdvancedParameters:
        default: Do not change parameters below, unless necessary!
      StackNameLike:
        default: Allowed stack name pattern
      AllowVpcIds:
        default: Allowed VPCs
      AllowSubnetIds:
        default: Allowed Subnets
      AllowSecGrpIds:
        default: Allowed Existing Security Groups

Resources:

  DeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      Description: >-
        Resources in Client VPN CloudFormation stack: create, update, delete
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: { Service: cloudformation.amazonaws.com }
            Action: sts:AssumeRole
      # In-line policies apply only to this role, which, in turn, can only be
      # assumed by CloudFormation. Separate, "managed" policies could be
      # attached to other roles or users, allowing permission escalation.
      # Administrator should restrict iam:PassRole to prevent use of this role
      # with arbitrary CloudFormation stacks.
      Policies:
        - PolicyName: ClientVpnCloudFormationStackDeploy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:

              # CLOUDWATCH LOGS ##############################################

              - Sid: ForCloudWatchLogs
                Effect: Allow
                Action:
                  - kms:ListKeys
                  - kms:ListAliases
                  - kms:DescribeKey
                Resource: "*"

              - Effect: Allow
                Action:
                  - logs:DescribeLogGroups
                  - logs:ListTagsForResource
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:TagResource
                  - logs:TagLogGroup
                Resource:
                  - !Sub "arn:${AWS::Partition}:logs:*:${AWS::AccountId}:log-group:*"
                Condition:
                  StringLike:
                    aws:RequestTag/aws:cloudformation:stack-name: !Ref StackNameLike
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                Resource:
                  - !Sub "arn:${AWS::Partition}:logs:*:${AWS::AccountId}:log-group:*/${StackNameLike}"
                # Condition:
                #   StringLike:
                #     aws:RequestTag/aws:cloudformation:stack-name: !Ref StackNameLike
                # Not available, though in CloudWatch Logs/IAM documentation
              - Effect: Allow
                Action:
                  - logs:TagResource
                  - logs:TagLogGroup
                  - logs:UntagResource
                  - logs:UntagLogGroup
                  - logs:PutRetentionPolicy
                  - logs:DeleteRetentionPolicy
                  - logs:DescribeLogStreams
                  - logs:DeleteLogGroup
                Resource:
                  - !Sub "arn:${AWS::Partition}:logs:*:${AWS::AccountId}:log-group:*/${StackNameLike}"
                Condition:
                  StringLike:
                    aws:ResourceTag/aws:cloudformation:stack-name: !Ref StackNameLike
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:DeleteLogStream
                Resource:
                  - !Sub "arn:${AWS::Partition}:logs:*:${AWS::AccountId}:log-group:*/${StackNameLike}:log-stream:*"

              # SYSTEMS MANAGER PARAMETER STORE PARAMETERS ###################

              - Effect: Allow
                Action:
                  - ssm:DescribeParameters
                  - ssm:ListTagsForResource
                Resource: "*"
              - Effect: Allow
                Action:
                  - ssm:AddTagsToResource
                  - ssm:PutParameter
                Resource:
                  - !Sub "arn:${AWS::Partition}:ssm:*:${AWS::AccountId}:parameter/*/${StackNameLike}/*"
                # Condition:
                #   StringLike:
                #     aws:RequestTag/aws:cloudformation:stack-name: !Ref StackNameLike
                # Not available, though in Systems Manager/IAM documentation
              - Effect: Allow
                Action:
                  # - ssm:PutParameter
                  - ssm:LabelParameterVersion
                  # - ssm:AddTagsToResource
                  - ssm:RemoveTagsFromResource
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:DeleteParameter
                  - ssm:DeleteParameters
                Resource:
                  - !Sub "arn:${AWS::Partition}:ssm:*:${AWS::AccountId}:parameter/*/${StackNameLike}/*"
                Condition:
                  StringLike:
                    aws:ResourceTag/aws:cloudformation:stack-name: !Ref StackNameLike

              # ALL EC2 TAGS #################################################

              - Effect: Allow
                Action:
                  - ec2:DescribeTags
                Resource: "*"
              - Effect: Allow
                Action:
                  - ec2:CreateTags
                Resource:
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:security-group/*"
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:security-group-rule/*"
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:client-vpn-endpoint/*"
                # Condition:
                #   StringLike:
                #     aws:RequestTag/aws:cloudformation:stack-name: !Ref StackNameLike
                # Not available, though in EC2/IAM documentation
              - Effect: Allow
                Action:
                  - ec2:CreateTags
                  - ec2:DeleteTags
                Resource:
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:security-group/*"
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:security-group-rule/*"
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:client-vpn-endpoint/*"
                Condition:
                  StringLike:
                    aws:ResourceTag/aws:cloudformation:stack-name: !Ref StackNameLike

              # GENERAL NETWORK ##############################################

              - Effect: Allow
                Action:
                  - ec2:DescribeVpcs
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroup*
                  # Resource-level permissions not available for
                  # ec2:DescribeClientVpnEndpoints , though EC2/IAM
                  # documentation says otherwise
                  - ec2:DescribeClientVpn*
                Resource: "*"

              # SECURITY GROUPS ##############################################

              - Effect: Allow
                Action:
                  - ec2:CreateSecurityGroup
                Resource: "*"
                # Condition:
                #   StringLike:
                #     aws:RequestTag/aws:cloudformation:stack-name: !Ref StackNameLike
                # Not available, though in EC2/IAM documentation
              # - Effect: Allow
              #   Action:
              #     - ec2:CreateSecurityGroup
              #   Resource: "*"
              #   Condition:
              #     StringLike:
              #       ec2:VpcID: !Ref AllowVpcIds
              - Effect: Allow
                Action:
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:UpdateSecurityGroupRuleDescriptionsIngress
                  - ec2:UpdateSecurityGroupRuleDescriptionsEgress
                  - ec2:ModifySecurityGroupRules
                  - ec2:RevokeSecurityGroupIngress
                  - ec2:DeleteSecurityGroup
                Resource:
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:security-group/*"
                Condition:
                  StringLike:
                    aws:ResourceTag/aws:cloudformation:stack-name: !Ref StackNameLike

              - Effect: Allow
                Action:
                  - ec2:RevokeSecurityGroupEgress
                Resource:
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:security-group/*"
                # Condition:
                #   StringLike:
                #     aws:ResourceTag/aws:cloudformation:stack-name: !Ref StackNameLike
                # Neither aws:RequestTag/ nor aws:ResourceTag/ is available
                # while a security group with no egress rule is being created

              - Effect: Allow
                Action:
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:AuthorizeSecurityGroupEgress
                Resource:
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:security-group-rule/*"
                Condition:
                  StringLike:
                    aws:RequestTag/aws:cloudformation:stack-name: !Ref StackNameLike

              # AWS CLIENT VPN ENDPOINT ######################################

              - Effect: Allow
                Action:
                  - ec2:CreateClientVpnEndpoint
                Resource:
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:client-vpn-endpoint/*"
                # Condition:
                #   StringLike:
                #     aws:RequestTag/aws:cloudformation:stack-name: !Ref StackNameLike
                # Not available, though in EC2/IAM documentation
              - Effect: Allow
                Action:
                  # - ec2:DescribeClientVpn*
                  - ec2:AuthorizeClientVpnIngress
                  - ec2:RevokeClientVpnIngress
                  - ec2:CreateClientVpnRoute
                  - ec2:DeleteClientVpnRoute
                  - ec2:AssociateClientVpnTargetNetwork
                  - ec2:DisassociateClientVpnTargetNetwork
                  - ec2:ModifyClientVpnEndpoint
                  - ec2:ApplySecurityGroupsToClientVpnTargetNetwork
                  - ec2:DeleteClientVpnEndpoint
                Resource:
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:client-vpn-endpoint/*"
                # Condition:
                #   StringLike:
                #     aws:ResourceTag/aws:cloudformation:stack-name: !Ref StackNameLike
                # CloudFormation automatic tag not propagated
              - Effect: Allow
                Action:
                  - ec2:CreateClientVpnEndpoint
                  - ec2:ModifyClientVpnEndpoint
                  - ec2:ApplySecurityGroupsToClientVpnTargetNetwork
                Resource: "*"
                Condition:
                  StringLike:
                    ec2:VpcID: !Ref AllowVpcIds
              - Effect: Allow
                Action:
                  - ec2:CreateClientVpnEndpoint
                  - ec2:ModifyClientVpnEndpoint
                  - ec2:ApplySecurityGroupsToClientVpnTargetNetwork
                Resource:
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:security-group/*"
                Condition:
                  StringLike:
                    aws:ResourceTag/aws:cloudformation:stack-name: !Ref StackNameLike
              - Effect: Allow
                Action:
                  - ec2:CreateClientVpnEndpoint
                  - ec2:ModifyClientVpnEndpoint
                  - ec2:ApplySecurityGroupsToClientVpnTargetNetwork
                Resource:
                  - !Sub "arn:${AWS::Partition}:ec2:*:*:security-group/*"
                # Condition:
                #   StringLike:
                #     ec2:SecurityGropID: !Ref AllowSecGrpIds
                # Not available, though in EC2/IAM documentation
              - Effect: Allow
                Action:
                  - ec2:CreateClientVpnRoute
                  - ec2:DeleteClientVpnRoute
                  - ec2:AssociateClientVpnTargetNetwork
                Resource: "*"
                Condition:
                  StringLike:
                    ec2:SubnetId: !Ref AllowSubnetIds

                # CloudFormation stack tag propagation is a blessing and a
                # curse. Because the CVpn stack is intended to have
                # sched-set-Enable-true and sched-set-Enable-false stack tags,
                # CloudFormation needs to be able to get/list, create, modify
                # and delete tags on all child resources. Policy changes may
                # be necessary if CloudFormation begins supporting tag
                # propagation for more resource types.

  SampleDeploymentRolePassRolePol:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Description:
        Fn::Sub: >-
          ${DeploymentRole}: pass to CloudFormation. Demonstrates a privilege
          that non-adminstrators need before they can create a CloudFormation
          stack using the deployment role.
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: "iam:PassRole"
            Resource: !GetAtt DeploymentRole.Arn

Outputs:

  DeploymentRoleName:
    Description: >-
      Name (not ARN) of the service role (deployment role) that will be used to
      deploy the CloudFormation Client VPN stakck.
    Value: !Ref DeploymentRole
