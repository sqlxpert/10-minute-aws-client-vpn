---
AWSTemplateFormatVersion: "2010-09-09"

Description: |-
  CloudFormation service role to deploy

  github.com/sqlxpert/10-minute-aws-client-vpn  GPLv3  Copyright Paul Marcelin

Parameters:

  PlaceholderHelp:
    Type: String
    Default: "https://github.com/sqlxpert/10-minute-aws-client-vpn"

  PlaceholderSuggestedStackName:
    Type: String
    Default: "CVpnPrereq"

  StackNameBase:
    Type: String
    Description: >-
      String that must be in the name of any CloudFormation stack created
      using the deployment role. For security, do not include this string in
      the name of unrelated stacks or StackSets. You may add refixes or
      suffixes when naming a stack created using the deployment role. For
      example, if you specify "CVpn", you can alternate between "CVpn1" and
      "CVpn2" stacks for blue/green updates, and you can reate a "TestCVpn"
      stack for testing.
    Default: "CVpn"

Metadata:

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: For Reference
        Parameters:
          - PlaceholderHelp
          - PlaceholderSuggestedStackName
      - Label:
          default: Essential
        Parameters:
          - StackNameBase
    ParameterLabels:
      PlaceholderHelp:
        default: For help with this stack, see
      PlaceholderSuggestedStackName:
        default: Suggested stack name
      StackNameBase:
        default: >-
          Name of future stack

Resources:

  DeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      Description: >-
        Resources in Client VPN CloudFormation stack: create, update, delete
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: { Service: cloudformation.amazonaws.com }
            Action: sts:AssumeRole
      # In-line policies apply only to this role, which, in turn, can only be
      # assumed by CloudFormation. Separate, "managed" policies could be
      # attached to other roles or users, allowing permission escalation.
      # Administrator should restrict iam:PassRole to prevent use of this role
      # with arbitrary CloudFormation stacks.
      Policies:
        - PolicyName: ClientVpnCloudFormationStackDeploy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:

              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:DeleteLogGroup
                  - logs:PutRetentionPolicy
                  - logs:DeleteRetentionPolicy
                  - logs:ListTagsForResource
                  - logs:TagResource
                  - logs:TagLogGroup
                  - logs:UntagLogGroup
                  - logs:UntagResource
                  - logs:CreateLogStream
                  - logs:DescribeLogStreams
                Resource:
                  - !Sub "arn:${AWS::Partition}:logs:*:${AWS::AccountId}:log-group:*${StackNameBase}*"
                  # No standard CloudFormation tags (stack-name, etc.)
              - Effect: Allow
                Action:
                  - logs:DeleteLogStream
                Resource:
                  - !Sub "arn:${AWS::Partition}:logs:*:${AWS::AccountId}:log-group:*${StackNameBase}*:log-stream:*"
                  # No standard CloudFormation tags (stack-name, etc.)
              - Effect: Allow
                Action:
                  - logs:DescribeLogGroups
                Resource: "*"
              - Effect: Allow
                Action:
                  - kms:ListKeys
                  - kms:ListAliases
                  - kms:DescribeKey
                Resource: "*"

              - Sid: WarningAllSecGrpsNotOnlyStackRelated
                Effect: Allow
                Action:
                  - ec2:CreateTags
                  - ec2:RevokeSecurityGroupEgress
                Resource:
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:security-group/*"
                  # Cannot check aws:ResourceTag/aws:cloudformation:stack-name
                  # 1. Before a new security group is tagged
                  # 2. If creating a security group without an egress rule
                  #    (because AWS removes the default all-egress rule before
                  #    tagging the new security group!)
              - Effect: Allow
                Action:
                  - ec2:DeleteTags
                Resource:
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:security-group/*"
                Condition:
                  StringLike:
                    aws:ResourceTag/aws:cloudformation:stack-name: !Sub "*${StackNameBase}*"
              - Sid: WarningAllSecGrpRulesAndVpnEndpointsNotOnlyStackRelated
                Effect: Allow
                Action:
                  - ec2:CreateTags
                  - ec2:DeleteTags
                Resource:
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:security-group-rule/*"
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:client-vpn-endpoint/*"
                  # No standard CloudFormation tags (stack-name, etc.)

              - Effect: Allow
                Action:
                  - ec2:CreateSecurityGroup
                Resource:
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:security-group/*"
                # aws:RequestTag/aws:cloudformation:stack-name condition not present
              - Effect: Allow
                Action:
                  - ec2:CreateSecurityGroup
                Resource:
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:vpc/*"
              - Effect: Allow
                Action:
                  - ec2:UpdateSecurityGroupRuleDescriptionsIngress
                  - ec2:UpdateSecurityGroupRuleDescriptionsEgress
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:ModifySecurityGroupRules
                  - ec2:RevokeSecurityGroupIngress
                  - ec2:DeleteSecurityGroup
                Resource:
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:security-group/*"
                Condition:
                  StringLike:
                    aws:ResourceTag/aws:cloudformation:stack-name: !Sub "*${StackNameBase}*"
              - Effect: Allow
                Action:
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:ModifySecurityGroupRules
                Resource:
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:security-group-rule/*"
                  # CloudFormation cannot tag security group rules, as of 2022-10
              - Effect: Allow
                Action:
                  - ec2:DescribeSecurityGroup*
                  - ec2:DescribeSubnets
                  - ec2:DescribeVpcs
                Resource: "*"

              - Sid: WarningAllSsmParamsNotOnlyStackRelated
                Effect: Allow
                Action:
                  - ssm:PutParameter
                  - ssm:ListTagsForResource
                  - ssm:AddTagsToResource
                Resource:
                  - !Sub "arn:${AWS::Partition}:ssm:*:${AWS::AccountId}:parameter/*"
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:LabelParameterVersion
                  - ssm:RemoveTagsFromResource
                  - ssm:DeleteParameter
                  - ssm:DeleteParameters
                Resource:
                  - !Sub "arn:${AWS::Partition}:ssm:*:${AWS::AccountId}:parameter/*"
                Condition:
                  StringLike:
                    aws:ResourceTag/aws:cloudformation:stack-name: !Sub "*${StackNameBase}*"
              - Effect: Allow
                Action:
                  - ssm:DescribeParameters
                Resource: "*"

              # Meaningless ID numbers in AWS Client VPN Endpoint ARNs, and
              # lack of standard CloudFormation tags (stack-name, etc.),
              # prevents restricting the scope of the deployment role to just
              # the endpoint defined in a stack created using the deployment
              # role.
              - Effect: Allow
                Action:
                  - ec2:CreateClientVpnEndpoint
                Resource:
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:client-vpn-endpoint/*"
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:security-group/*"
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:subnet/*"
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:vpc/*"
              - Effect: Allow
                Action:
                  - ec2:ModifyClientVpnEndpoint
                  - ec2:ApplySecurityGroupsToClientVpnTargetNetwork
                Resource:
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:client-vpn-endpoint/*"
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:security-group/*"
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:vpc/*"
              - Effect: Allow
                Action:
                  - ec2:AssociateClientVpnTargetNetwork
                  - ec2:CreateClientVpnRoute
                  - ec2:DeleteClientVpnRoute
                Resource:
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:client-vpn-endpoint/*"
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:subnet/*"
              - Effect: Allow
                Action:
                  - ec2:AuthorizeClientVpnIngress
                  - ec2:RevokeClientVpnIngress
                  - ec2:DisassociateClientVpnTargetNetwork
                  - ec2:DeleteClientVpnEndpoint
                Resource:
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:client-vpn-endpoint/*"
              - Effect: Allow
                Action:
                  - ec2:DescribeClientVpn*
                Resource: "*"

                # CloudFormation stack tag propagation is a blessing and a
                # curse. Because the CVpn stack is intended to have
                # sched-set-Enable-true and sched-set-Enable-false stack tags,
                # CloudFormation needs to be able to get/list, create, modify
                # and delete tags on all child resources. Policy changes may
                # be necessary if CloudFormation begins supporting tag
                # propagation for more resource types.

  SampleDeploymentRolePassRolePol:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Description:
        Fn::Sub: >-
          ${DeploymentRole}: pass to CloudFormation. Demonstrates a privilege
          that non-adminstrators need before they can create a CloudFormation
          stack using the deployment role.
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: "iam:PassRole"
            Resource: !GetAtt DeploymentRole.Arn
